/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

// This Webpack plugin ensures `npm install <library>` forces a project rebuild.
// Weâ€™re not sure why this isn't Webpack's default behavior.
// See https://github.com/facebookincubator/create-react-app/issues/186.

'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var WatchMissingNodeModulesPlugin = function () {
  function WatchMissingNodeModulesPlugin(nodeModulesPath) {
    _classCallCheck(this, WatchMissingNodeModulesPlugin);

    this.nodeModulesPath = nodeModulesPath;
  }

  _createClass(WatchMissingNodeModulesPlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var _this = this;

      compiler.plugin('emit', function (compilation, callback) {
        var missingDeps = compilation.missingDependencies;
        var nodeModulesPath = _this.nodeModulesPath;

        // If any missing files are expected to appear in node_modules...
        if (missingDeps.some(function (file) {
          return file.indexOf(nodeModulesPath) !== -1;
        })) {
          // ...tell webpack to watch node_modules recursively until they appear.
          compilation.contextDependencies.push(nodeModulesPath);
        }

        callback();
      });
    }
  }]);

  return WatchMissingNodeModulesPlugin;
}();

module.exports = WatchMissingNodeModulesPlugin;
