'use strict';

var Children = {
  map: function map(children, fn, ctx) {
    if (children == null) return null;
    children = Children.toArray(children);
    if (ctx && ctx !== children) fn = fn.bind(ctx);
    return children.map(fn);
  },
  forEach: function forEach(children, fn, ctx) {
    if (children == null) return null;
    children = Children.toArray(children);
    if (ctx && ctx !== children) fn = fn.bind(ctx);
    children.forEach(fn);
  },
  count: function count(children) {
    return children && children.length || 0;
  },
  only: function only(children) {
    children = Children.toArray(children);
    if (children.length !== 1) throw new Error('Children.only expected to receive a single React element child.');
    return children[0];
  },
  toArray: function toArray(children) {
    if (children == null) return [];
    return Array.isArray && Array.isArray(children) ? children : [].concat(children);
  }
};

module.exports = Children;
