/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleDependency = require('./ModuleDependency');
var ModuleDependencyTemplateAsId = require('./ModuleDependencyTemplateAsId');

var ModuleHotDeclineDependency = function (_ModuleDependency) {
  _inherits(ModuleHotDeclineDependency, _ModuleDependency);

  function ModuleHotDeclineDependency(request, range) {
    _classCallCheck(this, ModuleHotDeclineDependency);

    var _this = _possibleConstructorReturn(this, (ModuleHotDeclineDependency.__proto__ || Object.getPrototypeOf(ModuleHotDeclineDependency)).call(this, request));

    _this.range = range;
    _this.weak = true;
    return _this;
  }

  _createClass(ModuleHotDeclineDependency, [{
    key: 'type',
    get: function get() {
      return 'module.hot.decline';
    }
  }]);

  return ModuleHotDeclineDependency;
}(ModuleDependency);

ModuleHotDeclineDependency.Template = ModuleDependencyTemplateAsId;

module.exports = ModuleHotDeclineDependency;