'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _webpackSources = require('webpack-sources');

var _webpack = require('webpack');

var _ExternalModuleFactoryPlugin = require('webpack/lib/ExternalModuleFactoryPlugin');

var _ExternalModuleFactoryPlugin2 = _interopRequireDefault(_ExternalModuleFactoryPlugin);

var _RaxMainTemplatePlugin = require('./RaxMainTemplatePlugin');

var _RaxMainTemplatePlugin2 = _interopRequireDefault(_RaxMainTemplatePlugin);

var _BuiltinModules = require('./BuiltinModules');

var _BuiltinModules2 = _interopRequireDefault(_BuiltinModules);

var _MultiplePlatform = require('./MultiplePlatform');

var _MultiplePlatform2 = _interopRequireDefault(_MultiplePlatform);

var _DuplicateChecker = require('./DuplicateChecker');

var _DuplicateChecker2 = _interopRequireDefault(_DuplicateChecker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var isProducation = process.env.NODE_ENV === 'production';

var RaxWebpackPlugin = function () {
  function RaxWebpackPlugin(options) {
    _classCallCheck(this, RaxWebpackPlugin);

    this.options = Object.assign({
      builtinModules: _BuiltinModules2.default,
      externalBuiltinModules: false,
      frameworkComment: null,
      includePolyfills: false,
      platforms: [], // web node weex reactnative
      polyfillModules: [],
      runModule: false,
      bundle: 'compatible', // private
      target: 'umd', // default umd
      duplicateCheck: ['rax']
    }, options);
  }

  _createClass(RaxWebpackPlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var _this = this;

      compiler.apply(new _webpack.DefinePlugin({
        '__DEV__': isProducation ? false : true
      }));

      compiler.apply(new _DuplicateChecker2.default({
        modulesToCheck: this.options.duplicateCheck
      }));

      compiler.plugin('this-compilation', function (compilation) {
        compilation.apply(new _RaxMainTemplatePlugin2.default(_this.options));
      });

      compiler.plugin('compile', function (params) {
        params.normalModuleFactory.apply(new _ExternalModuleFactoryPlugin2.default('amd', function (context, request, callback) {
          // @weex-module/* ignored
          if (/^@weex\-module\//.test(request)) {
            return callback(null, request, 'commonjs');
          }

          var builtinModuleName = _this.options.builtinModules[request];
          if (_this.options.externalBuiltinModules && builtinModuleName) {
            if (Array.isArray(builtinModuleName)) {
              var customRequest = '(function(){ var mod;';

              builtinModuleName.forEach(function (name) {
                customRequest += 'if (!mod) { try { mod = require("' + name + '") } catch(e) {} }';
              });

              customRequest += 'return mod;})()';
              // Custom external format
              return callback(null, customRequest, 'custom-format');
            } else {
              return callback(null, builtinModuleName, 'commonjs');
            }
          }

          callback();
        }));
      });

      if (this.options.target === 'bundle' || this.options.frameworkComment) {
        var defaultFrameworkComment = '// {"framework" : "Rax"}';
        var frameworkComment = typeof this.options.frameworkComment === 'string' ? this.options.frameworkComment : defaultFrameworkComment;

        compiler.plugin('compilation', function (compilation) {
          // uglify-webpack-plugin will remove javascript's comments in
          // optimize-chunk-assets, add frameworkComment after that.
          compilation.plugin('after-optimize-chunk-assets', function (chunks) {
            chunks.forEach(function (chunk) {
              // In webpack2 chunk.initial was removed. Use isInitial()
              try {
                if (!chunk.initial) return;
              } catch (e) {
                if (!chunk.isInitial()) return;
              }

              chunk.files.forEach(function (file) {
                compilation.assets[file] = new _webpackSources.ConcatSource(frameworkComment, '\n', compilation.assets[file]);
              });
            });
          });
        });
      }
    }
  }]);

  return RaxWebpackPlugin;
}();

RaxWebpackPlugin.BuiltinModules = _BuiltinModules2.default;
RaxWebpackPlugin.MultiplePlatform = _MultiplePlatform2.default;

module.exports = RaxWebpackPlugin;