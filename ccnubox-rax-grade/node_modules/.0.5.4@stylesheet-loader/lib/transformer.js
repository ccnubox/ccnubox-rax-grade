'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _camelcase = require('camelcase');

var _camelcase2 = _interopRequireDefault(_camelcase);

var _normalizeColor = require('./normalizeColor');

var _normalizeColor2 = _interopRequireDefault(_normalizeColor);

var _particular = require('./particular');

var _particular2 = _interopRequireDefault(_particular);

var _Validation = require('./Validation');

var _Validation2 = _interopRequireDefault(_Validation);

var _promptMessage = require('./promptMessage');

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var QUOTES_REG = /[\\'|\\"]/g;

var COLOR_PROPERTIES = {
  color: true,
  backgroundColor: true,
  borderColor: true,
  borderBottomColor: true,
  borderTopColor: true,
  borderRightColor: true,
  borderLeftColor: true
};

exports.default = {
  sanitizeSelector: function sanitizeSelector(selector) {
    var transformDescendantCombinator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { start: { line: 0, column: 0 } };

    // filter multiple extend selectors
    if (!transformDescendantCombinator && !/^\.[a-zA-Z0-9_:\-]+$/.test(selector)) {
      var message = 'line: ' + position.start.line + ', column: ' + position.start.column + ' - "' + selector + '" is not a valid selector (e.g. ".abc\u3001.abcBcd\u3001.abc_bcd")';
      console.error(_chalk2.default.red.bold(message));
      (0, _promptMessage.pushErrorMessage)(message);
      return null;
    }
    return selector.replace(/\s/gi, '_').replace(/[\.]/g, '');
  },
  convertProp: function convertProp(prop) {
    var result = (0, _camelcase2.default)(prop);

    // Handle vendor prefixes
    if (prop.indexOf('-webkit') === 0) {
      result = result.replace('webkit', 'Webkit');
    } else if (prop.indexOf('-moz') === 0) {
      result = result.replace('moz', 'Moz');
    }

    return result;
  },
  convertValue: function convertValue(property, value) {
    var result = value,
        resultNumber;

    if (!Number.isNaN(Number(result))) {
      result = Number(result);
    }

    if (COLOR_PROPERTIES[property]) {
      result = (0, _normalizeColor2.default)(value);
    }

    return result;
  },
  convert: function convert(rule) {
    var _this = this;

    var style = {};

    if (rule.tagName === 'text') {
      return;
    }

    rule.declarations.forEach(function (declaration) {
      if (declaration.type !== 'declaration') {
        return;
      }
      declaration.value = declaration.value.replace(QUOTES_REG, '');
      var camelCaseProperty = _this.convertProp(declaration.property);
      var value = _this.convertValue(camelCaseProperty, declaration.value);
      style[camelCaseProperty] = value;

      _Validation2.default.validate(camelCaseProperty, declaration.property, declaration.value, rule.selectors.join(', '), declaration.position);
      if (_particular2.default[camelCaseProperty]) {
        var particularResult = _particular2.default[camelCaseProperty](value);
        if (particularResult.isDeleted) {
          style[camelCaseProperty] = null;
          delete style[camelCaseProperty];
          delete particularResult.isDeleted;
        }
        Object.assign(style, particularResult);
      }
    });

    return style;
  }
};
module.exports = exports['default'];